#= require_tree ./vendor
#= require bootstrap
#= require_tree .

window.App ||= {}

class App.Main
  @API_ROOT: "https://api.spotify.com/v1"
  market: "US"
  library: {}
  artists: []
  headers: {}

  constructor: (token, @market) ->
    @headers["Authorization"] = "Bearer #{token}" if token.length >= 1

  normalize: (string) ->
    string.toLowerCase().replace("&", "and").replace(/[^A-zÀ-ÿ\s]/g, "").replace(/\s+/g, " ").trim()

  processTrack: (artist, album) =>
    artist = @normalize(artist)
    album = @normalize(album)
    if @library[artist] == undefined
      @processArtist(@artists[@artists.length-1]) if @artists.length >= 1
      @artists.push(artist)
      @library[artist] = [album]
    else if @library[artist].indexOf(album) == -1
      @library[artist].push(album)

  processArtist: (localName) =>
    url = "#{App.Main.API_ROOT}/search/?q=artist:#{encodeURIComponent(localName)}&type=artist&limit=1&market=#{@market}"
    $ajax = $.ajax
      url: url,
      headers: @headers
    $ajax.done (data) =>
      artist = data.artists.items[0]
      if artist != undefined
        $panel = $("<div class='panel panel-default' id='artist-#{artist.id}' />")
        $panel.append("<div class='panel-heading'><strong>#{artist.name}<strong></div>")
        $("#output").append($panel)
        @getAlbumsForArtist(artist.id, localName)

  getAlbumsForArtist: (artist_id, localName) ->
    url = "#{App.Main.API_ROOT}/artists/#{artist_id}/albums?album_type=album&market=#{@market}"
    $ajax = $.ajax
      url: url
      headers: @headers
    $ajax.done (data) =>
      names = []
      ids = []
      $.each data.items, (_, album) =>
        norm = @normalize(album.name)
        return if album.name.toLowerCase().match(/\((deluxe|special)/) != null
        return if names.indexOf(norm) != -1
        ids.push(album.id)
        names.push(norm)
      @getAlbums(ids, artist_id, localName) if ids.length >= 1

  getAlbums: (ids, artist_id, localName) =>
    url = "#{App.Main.API_ROOT}/albums?ids=#{ids.join(',')}"
    $ajax = $.ajax
      url: url,
      headers: @headers
    $ajax.done (data) =>
      $group = $("<ul class='list-group' />")
      albums = data.albums.sort (a, b) =>
        @timestamp(a.release_date) - @timestamp(b.release_date)
      for album in albums
        $item = $("<a class='list-group-item' href='#{album.uri}' />")
        $art = $("<img class='pull-right' src='#{album.images[0].url}' height='30' />")
        $body = $("<p><span class='text-muted'>#{album.release_date.replace(/^(\d{4}).*/, '$1')}:</span> #{album.name}<p>")
        $item.append($art, $body)

        match = @library[localName].indexOf(@normalize(album.name)) != -1
        $item.addClass("list-group-item-success") if match

        $group.append($item)
      $("#artist-#{artist_id}").append($group)

  timestamp: (string) ->
    (new Date(string)).valueOf()

  start: =>
    $("#output").html("").addClass("populated")

  stop: ->
    $(".progress").addClass("done")
    setTimeout (-> $(".progress").addClass("collapsed")), 1000

  updateProgress: (done, total) ->
    width = "#{Math.ceil(done/total*100)}%"
    $(".progress-bar").css("width", width)

  init: ->
    $("#file-input").change (event) =>
      unless window.File && window.FileList && window.FileReader
        return window.alert("Your browser does not support the File API")

      files = event.target.files
      if files.length == 1 && files[0].type.match("text/xml")
        parser = new App.LibParser(files[0], @processTrack, @updateProgress, @stop)
        @start()
        parser.read()
      else
        window.alert("Please drop your iTunes Music Library.xml")

$ ->
  app = new App.Main("<%= spotify_token %>", "<%= spotify_market %>")
  app.init()
